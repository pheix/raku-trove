#!/usr/bin/env raku

use Trove;

enum Proc <jq yq>;

sub MAIN (
    Str  :$g = '.',
    Str  :$v,
    Str  :$s,
    Bool :$c = False,
    Proc :$p = (jq),
    Str  :$f,
    Bool :$l = False,
    Str  :$o,
    Bool :$q = False,
    Bool :$d = False,
)
{
    my Str $gitver;

    if $g && $g.IO.d && "$g/.git".IO.d {
        my $proc = run 'git', "--git-dir=$g/.git", "--work-tree=$g", 'log', '-1', :out;
        my $out  = $proc.out.slurp: :close;

        if $out ~~ /(<[\d]>+\.<[\d]>+\.<[\d]>+)/ {
            $gitver = ~$0;
        }
    }

    my %inits =
        dumpcoverq => $d,
        silent     => $q,
        processor  => ~$p,
        currver    => $v,
        gitver     => $gitver,
        gitpath    => $g,
        colorize   => $c,
        origin     => $o,
        logfirststage => $l,
        skippedstages => $s && $s ~~ /^ <[\d,\s]>+ $/ ?? $s.split(/\s*\,\s*/, :skip-empty) !! List.new,
        $f && $f.IO.f ??
            (configfile => $f) !!
                (configfile =>
                    ($p eq 'jq' ??
                        './x/trove-configs/test.conf.json' !!
                            './x/trove-configs/test.conf.yaml'
                    )
                ),
    ;

    my $trove = Trove.new(|%inits);

    $trove.process;
}
